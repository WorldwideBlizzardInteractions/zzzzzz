-- Load ArrayField GUI
local ArrayField = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/ArrayField/main/Source.lua'))()

-- Create the main window for AresWare
local AresWare = ArrayField:CreateWindow("AresWare - Zombie Rush")

-- Variables for Aimbot and Silent Aim
local aimbotEnabled = false
local aimDistanceLimit = 100 -- Maximum distance for aiming at zombies
local aimOffset = Vector3.new(0, 2, 0) -- Adjust aim height

-- No Clip and Infinite Jump Variables
local noClipEnabled = false
local infiniteJumpEnabled = false

-- Function to check if the player has any weapon (Pistol, Shotgun, etc.)
local function hasWeapon()
    local player = game.Players.LocalPlayer
    return player.Character and player.Character:FindFirstChildWhichIsA("Tool") ~= nil
end

-- Function to get the equipped weapon
local function getEquippedWeapon()
    local player = game.Players.LocalPlayer
    return player.Character and player.Character:FindFirstChildWhichIsA("Tool")
end

-- Function to perform silent aim
local function silentAim()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Start the silent aim loop
    while aimbotEnabled do
        wait(0.05) -- Delay for responsiveness
        
        -- Find the closest zombie
        local closestZombie = nil
        local closestDistance = aimDistanceLimit
        
        for _, zombie in pairs(workspace["Zombie Storage"]:GetChildren()) do
            if zombie:IsA("Model") and zombie:FindFirstChild("Humanoid") then
                local zombieHumanoidRootPart = zombie:FindFirstChild("HumanoidRootPart")
                if zombieHumanoidRootPart then
                    local distance = (zombieHumanoidRootPart.Position - humanoidRootPart.Position).magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestZombie = zombie
                    end
                end
            end
        end
        
        -- If a closest zombie is found, aim at it
        if closestZombie then
            local aimPosition = closestZombie.HumanoidRootPart.Position + aimOffset -- Adjust aim height
            humanoidRootPart.CFrame = CFrame.new(aimPosition) -- Aim at the zombie

            -- Fire the equipped weapon if available
            local weapon = getEquippedWeapon()
            if weapon then
                weapon:Activate() -- Attack the zombie
                wait(0.2) -- Adjust delay between shots for smoother firing
            else
                AresWare:Notify("AresWare", "No weapon found in character.", 5) -- Notification if no weapon is found
                aimbotEnabled = false -- Disable aimbot if no weapon is equipped
            end
        end
    end
end

-- Function for No Clip
local function toggleNoClip(state)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    humanoid:ChangeState(state and Enum.HumanoidStateType.Physics or Enum.HumanoidStateType.GettingUp) -- No Clip state

    -- Allow moving through walls when no clip is enabled
    for _, part in ipairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = not state
        end
    end
end

-- Function for Infinite Jump
local function toggleInfiniteJump()
    local player = game.Players.LocalPlayer
    local userInputService = game:GetService("UserInputService")

    if infiniteJumpEnabled then
        userInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.Space then
                player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    end
end

-- Create Aimbot Tab
local aimbotTab = AresWare:CreateTab("Aimbot")

-- Button to toggle aimbot
aimbotTab:CreateToggle("Enable Aimbot", function(state)
    if state and not hasWeapon() then
        AresWare:Notify("AresWare", "You need a weapon to enable Aimbot.", 5)
        return -- Prevent enabling aimbot if no weapon is available
    end

    aimbotEnabled = state
    if state then
        silentAim() -- Start silent aim function
    end
end)

-- Create Additional Features Tab
local additionalFeaturesTab = AresWare:CreateTab("Additional Features")

-- Toggle for No Clip
additionalFeaturesTab:CreateToggle("Enable No Clip", function(state)
    noClipEnabled = state
    toggleNoClip(state)
end)

-- Toggle for Infinite Jump
additionalFeaturesTab:CreateToggle("Enable Infinite Jump", function(state)
    infiniteJumpEnabled = state
    toggleInfiniteJump() -- Start infinite jump functionality
end)

-- Create Credits Tab
local creditsTab = AresWare:CreateTab("Credits")

-- Add credits information
creditsTab:CreateLabel("AresWare")
creditsTab:CreateLabel("Discord: nullsyna")

-- Create a button to close the GUI
AresWare:CreateButton("Close GUI", function()
    AresWare:Notify("AresWare", "GUI Closed", 5)
    AresWare:Destroy() -- Close the GUI
end)

-- Connection checks
local function onPlayerAdded(player)
    if player == game.Players.LocalPlayer then
        -- Add any necessary functionality checks here
        if not hasWeapon() then
            AresWare:Notify("AresWare", "You need a weapon to use Aimbot.", 5)
        end
    end
end

-- Connect player added event
game.Players.PlayerAdded:Connect(onPlayerAdded)

-- Check for existing player
if game.Players.LocalPlayer then
    onPlayerAdded(game.Players.LocalPlayer)
end

-- Show the GUI
ArrayField:Init()
